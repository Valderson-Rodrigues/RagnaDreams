// Traduzido e revisado por Vrods e Manus.
//--------------------------------------------------------------
// Arquivo de Configuração de Batalha do rAthena
// Originalmente traduzido por Peter Kieser <pfak@telus.net>
// Tornado para um inglês mais simples por Ancyker
//--------------------------------------------------------------
// Nota 1: O valor é um interruptor de configuração (on/off, yes/no ou 1/0)
// Nota 2: O valor está em porcentagem (100 significa 100%)
// Nota 3: O valor é um campo de bits (bit field). Se nenhuma descrição for fornecida,
//         assuma os tipos de unidade (1: Jogador, 2: Monstro, 4: Pet, 8: Homunculo, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// Taxa máxima de HP dos jogadores? (Padrão é 100)
hp_rate: 100

// Taxa máxima de SP dos jogadores? (Padrão é 100)
sp_rate: 100

// Se cartas e atributos da mão esquerda são ou não aplicados ao ataque da mão direita. (Nota 1)
// (É 'yes' em servidores oficiais)
left_cardfix_to_right: yes

// A quantidade de HP com que um jogador renascerá, 0 é o padrão.
// (A unidade é em porcentagem do HP total, 100 é cura total de HP, 0 é renascer com 1HP total.)
restart_hp_rate: 0

// A quantidade de SP com que um jogador renascerá, 0 é o padrão.
// (A unidade é em porcentagem do SP total, 100 é cura total de SP, 0 é renascer com 1SP total.)
restart_sp_rate: 0

// Um jogador normal pode ignorar a árvore de habilidades? (Nota 1)
player_skillfree: no

// Quando definido como 'yes', força que os pontos de habilidade ganhos da 1ª classe sejam colocados em habilidades da 1ª classe,
// e força que os pontos de habilidade de noviço sejam colocados na habilidade básica. (Nota 1)
player_skillup_limit: yes

// Habilidades de quest podem ser aprendidas? (Nota 1)
// Definir isso como 'yes' pode abrir uma brecha de exploração no seu servidor!
quest_skill_learn: no

// Quando as habilidades são resetadas, as habilidades de quest também são resetadas? (Nota 1)
// Definir isso como 'yes' pode abrir uma brecha de exploração no seu servidor!
// NOTA: Se você tiver quest_skill_learn definido como 'yes', as habilidades de quest são sempre resetadas.
quest_skill_reset: no

// Você precisa ter as habilidades básicas para poder sentar, negociar, formar um grupo ou criar uma sala de chat? (Nota 1)
basic_skill_check: yes

// Ao teleportar ou aparecer em um mapa, quanto tempo até um monstro te ver se você não se mover? (tempo em milissegundos)
player_invincible_time: 5000

// O intervalo de tempo para o HP se restaurar naturalmente. (em milissegundos)
natural_healhp_interval: 6000

// O intervalo de tempo para o SP se restaurar naturalmente. (em milissegundos)
natural_healsp_interval: 8000

// O intervalo de tempo da habilidade de cura automática. (em milissegundos)
natural_heal_skill_interval: 10000

// O peso máximo que um personagem pode carregar antes de parar de curar naturalmente. (Nota 2)
major_overweight_rate: 90

// Velocidade máxima de ataque. (Padrão 190, Máximo permitido 199)
max_aspd: 190

// O mesmo que max_aspd, mas para classes 3. (Padrão 193, Máximo permitido 199)
max_third_aspd: 193

// ASPD Máx para classes expandidas (Kagerou/Oboro e Insurgente). (Padrão 193, Máximo permitido 199)
max_extended_aspd: 193

// ASPD Máx para a Classe Invocador (Doram). (Padrão 193, Máximo permitido 199)
max_summoner_aspd: 193

// Taxa máxima de velocidade de caminhada (200 seria limitado ao dobro da velocidade normal).
max_walk_speed: 300

// HPs máximos dependendo do nível de base.
max_hp_lv99: 330000
max_hp_lv150: 660000
max_hp: 1100000

// SP máximo. (Padrão é 1000000)
max_sp: 1000000

// Atributos/stats máximos para cada classe. (for, agi, vit, int, des, e sor)
max_parameter: 99
max_trans_parameter: 99
max_third_parameter: 130
max_third_trans_parameter: 130
max_baby_parameter: 80
max_baby_third_parameter: 117
max_extended_parameter: 130
max_summoner_parameter: 130
max_fourth_parameter: 130

// Bônus de pontos de atributo para classes transcendentes.
transcendent_status_points: 52

// Defesa/defm máxima de armadura.
max_def: 99

// Bônus de conversão de Def para Def2. Se a def/defm da armadura exceder max_def,
// o restante é convertido para def de vit/defm de int usando este multiplicador.
over_def_bonus: 0

// Peso máximo que os carrinhos podem carregar.
max_cart_weight: 8000

// Impedir o logout de jogadores após serem atingidos por quanto tempo (em ms, 0 desativa)?
prevent_logout: 10000

// Quando o servidor deve impedir um jogador de deslogar? (Nota 3)
// 2 = Impedir logout após atacar
// 4 = Impedir logout após usar habilidade
// 8 = Impedir logout após ser atingido
prevent_logout_trigger: 14

// Exibir os valores de hp/sp drenados de ataques normais? (Ex: Carta Mosca Caçadora)
show_hp_sp_drain: no

// Exibir os valores de hp/sp ganhos ao matar monstros? (Ex: Carta Salgueiro Ancião)
show_hp_sp_gain: yes

// Se definido, quando A aceita B como amigo, B também será adicionado à lista de amigos de A.
friend_auto_add: yes

// Pedidos simultâneos de troca/grupo/clã são automaticamente rejeitados?
invite_request_check: yes

// Jogadores droparão uma 'Caveira' ao serem mortos?
// 0 = Desativado
// 1 = Dropado apenas em mapas PvP
// 2 = Dropado em todas as situações
bone_drop: 0

// Personagens montados (em Peco) aumentam de tamanho?
// 0 = não
// 1 = apenas Classes Normais em Peco têm tamanho Grande
// 2 = apenas Classes Bebês em Peco têm tamanho Médio
// 3 = ambos
character_size: 0

// Personagens ociosos podem receber @autoloot?
// Defina o tempo em segundos em que um personagem ocioso parará de receber itens do Autoloot (0: desativado).
idle_no_autoloot: 0

// Distância mínima que uma loja/sala de chat deve estar de um NPC para ser aberta.
// Padrão: 3 (0: desativado).
min_npc_vendchat_distance: 3

// O quanto as montarias de aluguel devem aumentar a velocidade de movimento de um jogador?
// Padrão é 25. 100 = 100% de Aumento.
rental_mount_speed_boost: 25

//===================================
// Sistema VIP
//===================================
// Aumento de slots no armazém. Definir como 0 desativará.
vip_storage_increase: 300

// Aumento da taxa de experiência de base. (Nota 2)
vip_base_exp_increase: 50

// Aumento da taxa de experiência de classe. (Nota 2)
vip_job_exp_increase: 50

// Multiplicador da taxa de penalidade de experiência para contas VIP.
vip_exp_penalty_base: 100
vip_exp_penalty_job: 100

// Penalidade de Zeny para contas VIP.
vip_zeny_penalty: 0

// Aumento de experiência do Manual de Batalha.
vip_bm_increase: 2

// Aumento de drop de itens.
vip_drop_increase: 50

// Requisito de Gemas.
// O Grupo VIP pode ignorar o requisito de Gemas para habilidades?
// 0 = Desativado
// 1 = Comporta-se como a Carta Abelha-Rainha
// 2 = Remove todos os requisitos de gemas (padrão)
vip_gemstone: 2

// Exibirá informações de taxas (EXP, Drop e mensagem de penalidade de morte)? (Nota 1)
vip_disp_rate: yes

// Reviver jogador morto ao teleportar? (Nota 1)
revive_onwarp: yes

// Nível de base mínimo para receber Bônus de Ranker de Taekwon.
taekwon_ranker_min_lv: 90

// Pontos de fama ganhos
fame_taekwon_mission: 1
fame_refine_lv1: 1
fame_refine_lv2: 25
fame_refine_lv3: 1000
fame_forge: 10
blacksmith_fame_refine_threshold: 10
fame_pharmacy_3: 1
fame_pharmacy_5: 3
fame_pharmacy_7: 10
fame_pharmacy_10: 50

// Como o servidor deve medir o tempo de ociosidade do personagem? (Nota 3)
idletime_option: 0x7C1F

// Ajustar as características especiais da classe invocador.
summoner_race: 11
summoner_size: 0

//================================
// Sistemas de Classe 4
//================================
// Quantos pontos de trait os jogadores ganham ao mudar para uma classe 4?
// Padrão: 7
trait_points_job_change: 7

// Limite máximo de stats de trait.
// Stats de Trait: POW, STA, WIS, SPL, CON, CRT
// Oficial é 110.
max_trait_parameter: 110

// Porcentagem máxima de RES/MRES que pode ser ignorada por bônus de item/habilidade.
// Padrão: 50
max_res_mres_ignored: 50

// AP máximo.
// Padrão: 1000
max_ap: 1000

// Taxa máxima de AP dos jogadores? (Padrão é 100)
ap_rate: 100

// A quantidade de AP com que um jogador renascerá, 0 é o padrão.
restart_ap_rate: 0

// AP é perdido quando o jogador morre?
// Padrão: yes
loose_ap_on_death: yes

// AP é perdido quando o jogador entra em mapas PVP/GVG/WoE/Campo de Batalha?
// Padrão: yes
loose_ap_on_map: yes

// O jogador mantém seu AP ao deslogar?
// Padrão: yes
keep_ap_on_logout: yes
