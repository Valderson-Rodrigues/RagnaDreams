//--------------------------------------------------------------
// Arquivo de Configuração de Batalha do rAthena
// Originalmente Traduzido por Peter Kieser <pfak@telus.net>
// Adaptado para um inglês mais claro por Ancyker
//--------------------------------------------------------------
// Nota 1: O valor é um interruptor de configuração (on/off, yes/no ou 1/0)
// Nota 2: O valor está em porcentagem (100 significa 100%)
// Nota 3: O nível máximo das classes é armazenado na tabela de exp.
//         Veja os arquivos db/exp.txt e db/exp2.txt para alterá-los.
//--------------------------------------------------------------

// Taxa na qual a exp. é concedida. (Nota 2)
base_exp_rate: 100

// Taxa na qual a exp. de classe é concedida. (Nota 2)
job_exp_rate: 100

// Ative isso para permitir que um jogador suba mais de um nível por morte de monstro. (Nota 1)
multi_level_up: no

// Permitir subir múltiplos níveis até um certo nível?
// Isso só é acionado se multi_level_up estiver ativado.
// Padrão: 0 (Ilimitado)
multi_level_up_base: 0
multi_level_up_job: 0

// Definir isso pode limitar a experiência máxima que se pode obter por morte de monstro, especificada como
// % da barra de exp atual. (Cada 10 = 1.0%)
// Por exemplo, defina como 500 e não importa quanta exp o monstro dê,
// ele nunca poderá lhe dar mais da metade da sua barra de exp atual.
max_exp_gain_rate: 0

// Método de cálculo da experiência ganha ao derrotar um monstro:
// 0 = usa dano causado / dano total como proporção de dano
// 1 = usa dano causado / hp_máximo como proporção de dano
// 2 = 0 + primeiro atacante conta duas vezes
exp_calc_type: 0

// Aumento de experiência por atacante. Ou seja, cada atacante adicional no
// monstro faz com que ele dê essa quantidade a mais de experiência
// (ex: 5 pessoas atacam com 25 aqui, +(25*4)% -> +100% de exp)
exp_bonus_attacker: 25

// Número máximo de atacantes no qual o bônus de exp é limitado
// (ex: se definido como 5, o bônus máximo é 4*bônus-por-personagem, independentemente dos atacantes)
exp_bonus_max_attacker: 12

// Usar habilidades que não causam dano ainda deve contar como um atacante? (Nota 1)
// Definir isso como sim faz com que habilidades como Lex Aeterna aumentem a exp que um monstro dá.
// Oficialmente, você precisa causar dano para que conte.
exp_bonus_nodamage_attacker: no

// Taxa de bônus de exp de MVP. (Nota 2)
mvp_exp_rate: 100

// Taxa de exp de base/classe dada por NPCs. (Nota 2)
quest_exp_rate: 100

// A taxa de exp de classe ao usar a habilidade Curar (100 é o mesmo que a quantidade de cura, 200 é o dobro.
// O equilíbrio da taxa de exp. é melhor usado com 5 a 10)
heal_exp: 0

// A taxa de exp. que é ganha pelo processo de ressurreição, uma unidade é 0.01%.
// Cálculos de experiência para o valor da experiência * diferença de nível da pessoa revivida / 100 * resurrection_exp/10000 que o jogador revivido tem podem ser obtidos.
resurrection_exp: 0

// A taxa de exp de classe ao usar superfaturar e desconto em um NPC
// (em incrementos de 0.01% - 100 é 1%, 10000 é normal, 20000 é o dobro.)
// A forma como é calculado é (dinheiro recebido * nível da hab.) * shop_exp / 10000.
shop_exp: 0

// Exp de PVP. Os jogadores ganham exp em mapas PvP?
// (Nota: NÃO é exp de jogadores, mas de upar normalmente)
pvp_exp: yes

// Quando um jogador morre, como devemos penalizá-lo?
// 0 = Sem penalidade.
// 1 = Perde % do nível atual quando morto.
// 2 = Perde % da experiência total quando morto.
death_penalty_type: 1

// Taxa de penalidade de exp de base (Cada 100 é 1% de sua exp)
death_penalty_base: 100

// Taxa de penalidade de exp de classe (Cada 100 é 1% de sua exp)
death_penalty_job: 100

// Quando um jogador morre (para outro jogador), com quanto zeny devemos penalizá-lo?
// NOTA: É uma porcentagem do seu zeny, então 100 = 1%
zeny_penalty: 0

// Jogadores no nível máximo de base/classe perderão EXP ao morrer?
// 0: Nunca perde (padrão como no oficial).
// 1: Perde EXP de Base.
// 2: Perde EXP de Classe.
death_penalty_maxlv: 0

// Exibirá a experiência ganha ao matar um monstro. (Nota 1)
disp_experience: no

// Exibirá o zeny ganho (de monstros, trocas, etc) (Nota 1)
disp_zeny: no

// Usar o conteúdo de db/statpoint.txt ao fazer um reset de atributos e subir de nível? (Nota 1)
// Se não, uma equação será usada que preserva os pontos de atributo ganhos/perdidos
// por meios externos (ex: compradores/vendedores de pontos de atributo)
use_statpoint_table: yes

// Usar o conteúdo de db/statpoint.yml ao fazer um reset de atributos e subir de nível? (Nota 1)
// Se não, uma equação será usada que preserva os pontos de característica ganhos/perdidos
// por meios externos (ex: compradores/vendedores de pontos de característica)
use_traitpoint_table: yes

// Custo de EXP para usar PR_REDEMPTIO (Redenção) (Nota 2)
exp_cost_redemptio: 1

// Quantos jogadores são necessários para que a penalidade de EXP de PR_REDEMPTIO se torne 0?
// Se por padrão, 'exp_cost_redemptio' é 1 (1%) e a cada jogador revivido a penalidade é reduzida em 0.2%,
// significa que 'exp_cost_redemptio_limit' é 5.
exp_cost_redemptio_limit: 5
