// Traduzido e revisado por Vrods e Manus.
//--------------------------------------------------------------
// Arquivo de Configuração de Batalha do rAthena
// Originalmente traduzido por Peter Kieser <pfak@telus.net>
// Tornado para um inglês mais simples por Ancyker
//--------------------------------------------------------------
// Nota 1: O valor é um interruptor de configuração (on/off, yes/no ou 1/0)
// Nota 2: O valor está em porcentagem (100 significa 100%)
// Nota 3: O valor é um campo de bits (bit field). Se nenhuma descrição for fornecida,
//         assuma os tipos de unidade (1: Jogador, 2: Monstro, 4: Pet, 
//		   8: Homunculo, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// A taxa de HP dos MVPs. (Nota 2)
mvp_hp_rate: 100

// A taxa de HP de monstros normais (que não são MVPs). (Nota 2)
monster_hp_rate: 100

// Define várias configurações relacionadas à IA dos monstros. (Nota 3)
// 0x0001: Quando ativado, monstros atualizam sua célula alvo a cada X células movidas.
// 0x0002: Faz o monstro usar sua habilidade de "ataque rude" (geralmente teleportar)
//		   se for atacado e não puder revidar.
// 0x0004: Se não definido, monstros que podem mudar de alvo só o fazem se
//		   atacados a uma distância de [alcance de ataque+1].
// 0x0008: Quando definido, monstros se dispersam assim que perdem seu alvo.
// 0x0010: Se definido, habilidades de monstro definidas para amigos também serão ativadas neles mesmos.
// 0x0020: Quando definido, a IA do monstro é executada para todos os monstros em mapas com jogadores,
// 		   em vez de apenas para monstros próximos a jogadores.
// 0x0040: Quando definido, se o alvo do monstro mudar de mapa ou sair de vista,
		   o monstro andará em direção a portais de NPC/Sacerdote em seu campo de visão.
// 0x0080: Se não definido, monstros em estado de ataque só mudarão de alvo quando atacados por ataques normais.
//  	   Defina se quiser que eles mudem de alvo também por habilidades.
// 0x0100: Quando definido, um monstro escolherá uma habilidade aleatória de sua lista
//		   em vez de verificar em ordem.
// 0x0200: Quando definido, o tempo de recarga de uma habilidade de monstro não será
//		   aplicado a todas as entradas da mesma habilidade, mas apenas àquela usada.
// 0x0400: Define que os monstros têm um alcance de 9 para todas as habilidades.
		   Caso contrário, obedecerão às regras normais de alcance.
// 0x0800: Quando definido, monstros provocados sempre mudarão de alvo para quem os provocou.
// 0x1000: Quando definido, se um monstro escolhe uma habilidade mas não 
//		   pode usá-la por falta de alvo válido, ele procurará outra.
// 0x2000: Quando definido, monstros se moverão logo após atacar ou usar uma habilidade.
monster_ai: 0

// Com que frequência um monstro deve reavaliar sua perseguição?
// 32 (máx): Uma célula antes do fim do caminho de perseguição (oficial).
monster_chase_refresh: 32

// Monstros devem ser capazes de usar portais (adicione conforme necessário)?
// 0: Desativado.
// 1: Ativa teleporte de monstros ao pisar em portais de NPC.
// 2: Ativa teleporte de monstros ao pisar em Portais de Sacerdote.
// 4: Desativa teleporte se o mapa de destino for um mapa 'nobranch'.
// 8: Ativa teleporte de monstros ao pisar em Portal Dimensional.
mob_warp: 0

// Define o tempo (em ms) durante o qual os monstros terão sua IA ativa
// depois que todos os jogadores deixarem sua vizinhança.
mob_active_time: 0
boss_active_time: 0

// Ajuste do alcance de visão de Monstros e Pets (coluna range2 no mob_db). (Nota 2)
view_range_rate: 100

// Alcance de Perseguição é a perseguição mínima base que um monstro faz antes de desistir
// (coluna range3 no mob_db). (Nota 2)
chase_range_rate: 100

// Qual nível de Olhos de Águia e Olhos de Serpente os monstros devem ter aprendido?
// Oficialmente, monstros não têm essas habilidades, então seu alcance é 9.
// Se colocar um número maior que 0, o alcance será aumentado.
monster_eye_range_bonus: 0

// Alcance em que monstros "Looters" procuram por itens (máx 32).
// Oficial: 12
loot_range: 12

// Alcance em que monstros de "suporte" procuram por aliados para ajudar (máx 32).
// Oficial: 11
assist_range: 11

// Permitir que monstros sejam agressivos e ataquem primeiro? (Nota 1)
monster_active_enable: yes

// Os nomes do mob_db devem sobrescrever os nomes especificados nos arquivos de spawn?
// 0: Não
// 1: sempre usar a coluna Name do mob_db (nome em inglês)
// 2: sempre usar a coluna JName do mob_db (nome original do kRO)
override_mob_names: 0

// Taxa de atraso de dano do monstro (Nota 2).
monster_damage_delay_rate: 100

// Ações de monstros que pegam itens (Looting).
// 0 = Monstro consumirá o item.
// 1 = Monstro não consumirá o item.
monster_loot_type: 0

// Como o monstro procura por itens no chão para pegar?
// 0: Mais próximo (estilo Athena antigo)
// 1: Mais antigo no alcance (Oficial)
monster_loot_search_type: 1

// Chance de um monstro usar uma habilidade (Nota 2).
// Taxas mais altas levam a 100% de uso de habilidades, com poucos ou nenhum ataque normal.
// Defina como 0 para desativar as habilidades de monstros.
mob_skill_rate: 100

// Ajuste do atraso de habilidade do monstro (Nota 2).
// Após um monstro usar uma habilidade, há um atraso antes de poder usá-la novamente.
mob_skill_delay: 100

// Taxa de monstros em um mapa, 200 seria o dobro do normal. (Nota 2)
mob_count_rate: 100

// Taxa de respawn de monstros em um mapa. 
// 50 faria os monstros renascerem duas vezes mais rápido. (Nota 2)
mob_spawn_delay: 100
plant_spawn_delay: 100
boss_spawn_delay: 100

// O tempo de respawn dos monstros deve ter variação? (Nota 3)
// 0: Nenhum
// 1: Monstros chefes (oficial)
// 2: Monstros normais
// 3: Todos os monstros (legado Athena)
mob_spawn_variance: 1

// Monstros não devem nascer dentro do campo de visão dos jogadores?
// 0 é desativado, caso contrário é o número de tentativas antes de desistir.
no_spawn_on_player: 0

// As coordenadas de spawn nos arquivos de mob-spawn devem ser ignoradas? (Nota 1)
// Se sim, todos os monstros terão um local de respawn aleatório em todo o mapa.
force_random_spawn: no

// A célula central de cada monstro deve ser randomizada? (Nota 1)
// Oficialmente, no início do servidor, a célula central de cada monstro
// é definida aleatoriamente na área de spawn.
randomize_center_cell: yes

// Escravos (summons) herdam as características passivas/agressivas de seu mestre?
// 0: Não, mantém o modo original.
// 1: Escravos são sempre agressivos.
// 2: Escravos são sempre passivos.
// 3: Igual ao estado do mestre.
// 4: O modo é sobrescrito com o modo do escravo (oficial).
slaves_inherit_mode: 4

// Escravos (summons) têm a mesma velocidade de caminhada que seu mestre?
// 0: Nunca.
// 1: Se o mestre pode andar.
// 2: Se o mestre não pode andar.
// 3: Sempre.
slaves_inherit_speed: 3

// Escravos de MVP devem manter seu alvo quando invocados de volta para o mestre? (Nota 1)
mob_slave_keep_target: yes

// Escravos devem teleportar de volta para o mestre se ficarem muito longe durante a perseguição? (Nota 1)
slave_stick_with_master: no

// Escravos devem estar sempre ativos quando seu mestre está ativo? (Nota 1)
slave_active_with_master: no

// Os ataques de monstros invocados (alquimistas, @summon)
// podem ativar as cartas de autoconjuração do mestre? (Nota 1)
summons_trigger_autospells: yes

// Quando um monstro é atacado por outro monstro,
// ele revidará contra o mestre do monstro atacante em vez do próprio monstro?
retaliate_to_master: yes

// Se monstros devem mudar de alvo temporariamente quando
// uma habilidade ativa uma contra-habilidade do monstro. (Nota 1)
mob_changetarget_byskill: no

// Se a classe de um monstro for alterada, ele recuperará totalmente o HP? (Nota 1)
monster_class_change_full_recover: yes

// Exibir alguma informação do monstro ao lado de seu nome? (adicione conforme necessário)
// 1: Exibir HP do monstro (formato Hp/MaxHp)
// 2: Exibir HP do monstro (formato de porcentagem)
// 4: Exibir nível do monstro
show_mob_info: 0

// Zeny de monstros.
zeny_from_mobs: no

// Monstros sobem de nível (o monstro subirá de nível cada vez que um jogador for morto e ficará mais forte).
mobs_level_up: no
mobs_level_up_exp_rate: 1

// Opções de Monstros Dinâmicos
// Usar monstros dinâmicos? (recomendado para servidores de pequeno a médio porte)
dynamic_mobs: yes

// Remover monstros mesmo se estiverem feridos.
mob_remove_damaged: yes

// Atraso antes de remover monstros de mapas vazios (padrão 5 min = 300000 ms).
mob_remove_delay: 300000

// Define em quem o evento de script OnMobKill é executado quando um monstro é morto.
// Tipo 1: No jogador que matou o monstro.
// Tipo 0: No jogador que causou mais dano ao monstro.
mob_npc_event_type: 1

// Tempo em milissegundos para ativar a proteção contra Kill Steal (KS).
// Defina como 0 para desativar.
ksprotection: 0

// Se a tumba do MVP deve ou não aparecer.
mvp_tomb_enabled: yes

// Atraso antes da tumba do MVP aparecer.
// Padrão: 9 segundos
mvp_tomb_delay: 9000

// Se o tamanho de monstros invocados especialmente influencia a experiência, taxas de drop e status. (Nota 1)
mob_size_influence: no

// Como um monstro deve ser preso por uma Barreira de Gelo conjurada diretamente sobre ele?
// 0: Monstro não fica preso.
// 1: Monstro se comporta como um monstro preso.
// 2-255: Número de loops antes de se libertar.
mob_icewall_walk_block: 75
boss_icewall_walk_block: 0

// As barras de HP devem ser mostradas para os monstros?
// Requer cliente de 2012-04-04aRagexeRE ou superior.
monster_hp_bars_info: yes

// Um monstro deve renascer e um aviso ser impresso no servidor de mapa quando 
// um monstro não consegue se mover por muito tempo?
monster_stuck_warning: no

// Taxa com que monstros usam suas habilidades ociosas quando não há jogadores por perto (Nota 2).
mob_nopc_idleskill_rate: 100
boss_nopc_idleskill_rate: 100

// Taxa com que monstros se movem quando não há jogadores por perto (Nota 2).
mob_nopc_move_rate: 100
boss_nopc_move_rate: 100

// Ao matar um monstro, as conquistas do tipo AG_BATTLE são ativadas para todos no mesmo grupo dentro da área?
achievement_mob_share: no

// Tempo mínimo absoluto de respawn em milissegundos de um monstro.
// Padrão (Oficial): 1000
mob_respawn_time: 1000

// Define o tempo (em ms) após o qual um monstro destrava seu alvo quando preso.
mob_unlock_time: 2000
