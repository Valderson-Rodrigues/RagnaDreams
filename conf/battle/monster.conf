//--------------------------------------------------------------
// Arquivo de Configuração de Batalha do rAthena
// Originalmente Traduzido por Peter Kieser <pfak@telus.net>
// Adaptado para um inglês mais claro por Ancyker
//--------------------------------------------------------------
// Nota 1: O valor é um interruptor de configuração (on/off, yes/no ou 1/0)
// Nota 2: O valor está em porcentagem (100 significa 100%)
// Nota 3: O valor é um campo de bits (bit field). Se nenhuma descrição for fornecida,
//         assuma os tipos de unidade (1: Jogador, 2: Monstro, 4: Pet, 8: Homúnculo, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// A taxa de HP dos MVPs. (Nota 2)
mvp_hp_rate: 100

// A taxa de HP de monstros normais (ou seja, monstros que não são MVPs) (Nota 2)
monster_hp_rate: 100

// Define várias configurações relacionadas à IA (Inteligência Artificial) dos monstros. (Nota 3)
// 0x0001: Quando ativado, monstros atualizarão sua célula de destino a cada x células movidas.
//         (normalmente eles nunca atualizam sua célula de destino até estarem uma célula
//         antes do fim de seu caminho. x = monster_chase_refresh, veja abaixo)
// 0x0002: Faz o monstro usar sua habilidade de "ataque rude" (geralmente teleportar para longe) se for
//         atacado e não puder revidar, independentemente de como foi atacado (ex: Tocaia),
//         caso contrário, seu "ataque rude" só é ativado se não puder alcançar o alvo corpo a corpo (ex: atirando de longe)
// 0x0004: Se não estiver ativo, monstros que podem mudar de alvo só o fazem quando atacados a uma
//         distância de [alcance de ataque+1], caso contrário, monstros podem mudar de alvo e perseguir
//         atacantes à distância. Esta flag também sobrepõe o alvo de 'Provocar'.
// 0x0008: Quando ativo, monstros se dispersam assim que perdem seu alvo. Use este modo
//         para tornar muito mais difícil 'mobar' escondendo-se e juntando-os em um
//         único ponto (ex: treino com Tocaia)
// 0x0010: Se ativo, habilidades de monstros definidas para amigos também serão ativadas neles mesmos.
// 0x0020: Quando ativo, a IA do monstro é executada para todos os monstros em mapas que
//         têm jogadores, em vez de apenas para monstros que estão nas proximidades
//         dos jogadores.
// 0x0040: Quando ativo, se o alvo do monstro mudar de mapa ou sair de vista, o monstro
//         andará em direção a portais de NPC e/ou portais de Sacerdote em seu campo de visão.
//         Ele só andará para portais que pode usar e apenas para portais que o tragam de volta
//         à vista do alvo (use com mob_warp abaixo).
// 0x0080: Se não estiver ativo, monstros em estado de ataque só mudarão de alvo quando atacados
//         por ataques normais. Ative isso se quiser que monstros também troquem de alvo quando
//         atingidos por habilidades.
// 0x0100: Quando ativo, um monstro escolherá uma habilidade aleatória de sua lista e começará
//         a partir dela, em vez de verificar as habilidades em ordem (quando desativado, se um monstro tiver muitas
//         habilidades, as que estão perto do fim raramente serão selecionadas)
// 0x0200: Quando ativo, o tempo de recarga de uma habilidade de monstro não será aplicado a todas as entradas
//         da mesma habilidade, mas apenas àquela entrada específica (ex: Monstro tem Curar
//         em seis linhas na mob_skill_db, apenas a entrada que for realmente usada
//         receberá o atraso). Isso tornará os monstros mais difíceis, especialmente MVPs.
// 0x0400: Ative isso para fazer os monstros terem um alcance de 9 para todas as habilidades. Caso contrário, eles
//         obedecerão às regras normais de alcance de habilidade.
// 0x0800: Quando ativo, monstros que são provocados sempre mudarão de alvo para a
//         pessoa que provocou, mesmo que normalmente não mudassem de alvo ao serem atacados.
// 0x1000: Quando ativo, se um monstro escolher uma habilidade mas não puder usá-la porque não há
//         alvo válido no alcance, ele procurará outra habilidade que possa usar.
//         Isso faz, por exemplo, o General Tartaruga usar "Lanças de Terra" a um alcance de 8-9, enquanto
//         oficialmente ele só a usaria depois de já ter usado "Ataque Cego"
//         a um alcance de 0-7.
// 0x2000: Quando ativo, monstros se moverão logo após atacarem ou usarem uma habilidade.
//         Normalmente, a IA de um monstro fica inativa durante sua animação de ataque.
// Exemplo: 0x140 -> Perseguir jogadores através de portais + usar habilidades em ordem aleatória.
monster_ai: 0

// Com que frequência um monstro deve reavaliar sua perseguição?
// 0: A cada 100ms (MIN_MOBTHINKTIME)
// 1: A cada célula movida
// x: A cada x células movidas ou uma célula antes do fim do caminho de perseguição
// 32 (máx): Uma célula antes do fim do caminho de perseguição (oficial)
// Independentemente desta configuração, um monstro sempre verificará alvos no alcance de ataque.
// Diminua este valor se quiser que os monstros sejam mais reativos enquanto perseguem.
// Se você quiser que os monstros atualizem sua célula de destino durante a perseguição, você também precisa ativar
// a monster_ai 0x0001, veja acima. Caso contrário, isso define apenas a quantidade máxima de células
// que os monstros se moverão após perderem seu alvo (esconder-se, sem linha de visão, etc.).
monster_chase_refresh: 32

// Os monstros devem poder ser teleportados (adicione conforme necessário)?
// 0: Desativar.
// 1: Ativar teleporte de monstros ao ficarem sobre portais de NPC
// 2: Ativar teleporte de monstros ao ficarem sobre Portais de Sacerdote
// 4: Desativar teleporte se o mapa de destino for um mapa 'nobranch'.
// 8: Ativar teleporte de monstros ao ficarem sobre Portão Dimensional
mob_warp: 0

// Define o tempo (em ms) durante o qual os monstros terão sua IA ativa
// depois que todos os jogadores deixarem suas proximidades.
// Mesmo após esse tempo, eles ainda andarão aleatoriamente e usarão habilidades ociosas até
// que todos os jogadores que os viram desloguem ou até que sejam teleportados, chamados
// ou removidos do mapa de outra forma.
mob_active_time: 0
boss_active_time: 0

// Ajuste do campo de visão de Monstros e Pets (coluna range2 na mob_db) (Nota 2)
view_range_rate: 100

// Alcance de Perseguição é a perseguição mínima base que um monstro faz antes de desistir
// (enquanto o alvo estiver fora de seu campo de visão). Esta é a coluna range3
// na mob_db. (Nota 2)
chase_range_rate: 100

// Qual nível de Olhos de Águia e Olhos de Serpente os monstros devem ter aprendido?
// Oficialmente, os monstros não têm essas habilidades aprendidas, então suas habilidades de longo alcance
// têm apenas um alcance de 9. Se você colocar um número maior que 0, o alcance deles
// será aumentado por esse número.
monster_eye_range_bonus: 0

// Alcance em que monstros saqueadores procuram por itens (máx 32)
// Oficial: 12
// Athena Legado: 10
loot_range: 12

// Alcance em que monstros assistentes procuram por aliados para ajudar (máx 32)
// Oficial: 11
// Athena Legado: 10
assist_range: 11

// Permitir que monstros sejam agressivos e ataquem primeiro? (Nota 1)
monster_active_enable: yes

// Os nomes da mob_db devem sobrescrever os nomes de monstros especificados nos arquivos de spawn?
// 0: Não
// 1: sempre usar a coluna Name da mob_db (nome do monstro em inglês)
// 2: sempre usar a coluna JName da mob_db (nome original do monstro no kRO)
override_mob_names: 0

// Taxa de atraso de dano do monstro (Nota 2)
// Isso afeta o atraso de dano que é enviado ao cliente e é o valor base para o atraso de caminhada.
monster_damage_delay_rate: 100

// Ações de monstros saqueadores.
// 0 = O monstro consumirá o item.
// 1 = O monstro não consumirá o item.
monster_loot_type: 0

// Como o monstro procura por itens no chão para saquear?
// 0: Mais próximo (estilo antigo do Athena)
// 1: Mais antigo no alcance (Oficial)
monster_loot_search_type: 1

// Chance de um monstro conjurar uma habilidade (Nota 2)
// Taxas mais altas levam a 100% de uso de habilidades de monstro com poucos ou nenhum ataque normal.
// Defina como 0 para desativar as habilidades de monstros.
mob_skill_rate: 100

// Ajuste do atraso de habilidade de monstro (Nota 2)
// Depois que um monstro conjura uma habilidade, há um atraso antes de poder
// conjurá-la novamente. Note que habilidades com atraso 0 não podem ser afetadas por esta
// configuração.
mob_skill_delay: 100

// Taxa de monstros em um mapa, 200 seria o dobro do normal. (Nota 2)
mob_count_rate: 100

// Taxa de respawn de monstros em um mapa. 50 faria os monstros renascerem duas vezes mais rápido (metade do tempo de atraso) (Nota 2)
//Nota: Isso não afeta monstros com respawn imediato (a maioria dos monstros normais)
mob_spawn_delay: 100
plant_spawn_delay: 100
boss_spawn_delay: 100

// O tempo de respawn dos monstros deve ter variância aplicada a ele? (Nota 3)
// Em servidores oficiais, monstros invocados pelo comando boss_monster (principalmente MVPs) têm variância, o comportamento legado do Athena é que a variância é aplicada a todos os monstros.
// 0: Nenhuma
// 1: Monstros chefes (oficial)
// 2: Monstros normais
// 3: Todos os monstros (Athena legado)
mob_spawn_variance: 1

// Os monstros não devem nascer dentro do campo de visão dos jogadores?
// 0 é desativado, caso contrário, é o número de tentativas antes de desistir
// e invocar o monstro dentro da visão do jogador de qualquer maneira, a menos que o máximo (100) seja usado,
// nesse caso o monstro não será invocado, e será tentado novamente em
// 5 segundos.
// NOTA: Isso não tem efeito em monstros que sempre nascem na mesma célula
// (como ovos de formiga), exceto se você definir para o máximo.
no_spawn_on_player: 0

// As coordenadas de spawn nos arquivos mob-spawn devem ser ignoradas? (Nota 1)
// Se definido como sim, todos os monstros terão um ponto de respawn aleatório por todo o
// mapa, independentemente do que o arquivo mob-spawn diz.
force_random_spawn: no

// A célula central de cada monstro deve ser randomizada? (Nota 1)
// Oficialmente, no início do servidor, a célula central de cada monstro é definida para uma célula aleatória na área de spawn.
// Cada vez que o monstro nasce, ele nascerá em uma área ao redor de sua célula central, em vez do
// centro original da definição de spawn. Isso resulta em uma área de spawn total muito maior e uma
// experiência diferente a cada início do servidor.
// Defina como "no" se você quiser que todos os monstros de um spawn nasçam ao redor do centro original da
// definição de spawn, tornando a área de spawn total muito menor (comportamento antigo do eAthena).
randomize_center_cell: yes

// Os lacaios invocados herdam as características passivas/agressivas de seu mestre?
// 0: Não, mantém o modo original.
// 1: Lacaios são sempre agressivos.
// 2: Lacaios são sempre passivos.
// 3: Mesmo estado agressivo/passivo do mestre.
// 4: O modo é sobrescrito com o modo do lacaio (oficial)
slaves_inherit_mode: 4

// Os lacaios invocados têm a mesma velocidade de caminhada que seu mestre?
// Não se aplica a Esferas Marinhas invocadas por um Alquimista
// NOTA: O padrão é 3 nos servidores oficiais.
// 0: Nunca.
// 1: Se o mestre pode andar
// 2: Se o mestre não pode andar (mesmo monstros imóveis têm uma entrada
//    de velocidade em sua mob_db)
// 3: Sempre
slaves_inherit_speed: 3

// Os lacaios de MVP devem manter seu alvo quando invocados de volta para seu mestre? (Nota 1)
mob_slave_keep_target: yes

// Os lacaios devem teleportar de volta para seu mestre se se afastarem demais durante a perseguição? (Nota 1)
// Oficialmente, eles podem ser afastados do mestre o quanto você quiser.
slave_stick_with_master: no

// Os lacaios devem estar sempre ativos quando seu mestre está ativo? (Nota 1)
// Oficialmente, pode acontecer de o mestre estar ativo, mas os lacaios não.
slave_active_with_master: no

// Os ataques de monstros invocados (alquimistas ou monstros com @summon) causarão
// uma chance de ativar as cartas de autoconjuração do mestre? (Nota 1)
summons_trigger_autospells: yes

// Quando um monstro é atacado por outro monstro, ele revidará contra o mestre do dito monstro em vez do próprio monstro?
// NOTA: Monstros invocados são tanto aqueles adquiridos via @summon quanto os invocados por Alquimistas
retaliate_to_master: yes

// Os monstros devem mudar de alvo temporariamente quando uma habilidade aciona uma habilidade de contra-ataque do monstro? (Nota 1)
// ex: Monstro ataca jogador B, e jogador A conjura uma habilidade C. Se definido como sim e o
// monstro tiver uma habilidade que é acionada pela habilidade C, então A será o alvo da
// habilidade, caso contrário, B será o alvo da habilidade de reação.
mob_changetarget_byskill: no

// Se a classe de um monstro for alterada, ele recuperará totalmente o HP? (Nota 1)
monster_class_change_full_recover: yes

// Exibir algumas informações do monstro ao lado de seu nome? (adicione conforme necessário)
// (não funciona em guardiões ou Emperium)
// 1: Exibir HP do monstro (formato Hp/HpMax)
// 2: Exibir HP do monstro (formato de porcentagem da vida total)
// 4: Exibir nível do monstro
show_mob_info: 0

// Zeny de monstros
zeny_from_mobs: no

// Monstros sobem de nível (o monstro subirá de nível cada vez que um jogador for morto e eles ficarão mais fortes)
// A taxa de Exp é calculada ((nível do monstro - nível original do monstro)*(exp*(taxa de mobs_level_up_exp/100)))
// NOTA: Não se aplica aos Guardiões da WoE.
mobs_level_up: no
mobs_level_up_exp_rate: 1

// Opções de Monstros Dinâmicos
// Usar monstros dinâmicos? (recomendado para servidores de pequeno a médio porte)
dynamic_mobs: yes

// Remover Monstros mesmo que estejam feridos
mob_remove_damaged: yes

// Atraso antes de remover monstros de mapas vazios (padrão 5 min = 300 seg)
mob_remove_delay: 300000

// Define em quem o npc_event do monstro é executado quando um monstro é morto.
// Tipo 1: No jogador que matou o monstro (se morto por um não-jogador, recorre ao tipo 0)
// Tipo 0: No jogador que causou o maior dano ao monstro.
// NOTA: Isso afeta quem ganha o Castelo quando o Emperium é quebrado.
mob_npc_event_type: 1

// Tempo em milissegundos para ativar a proteção contra Roubo de Morte (Kill Steal)
// Defina como 0 para desativá-la.
// Se estiver ativado e um jogador estiver usando @noks, o dano de outros jogadores (KS) que não estão no grupo
// será reduzido a 0.
ksprotection: 0

// Se deve ou não invocar a tumba do MVP.
// Veja http://irowiki.org/wiki/MVP#Gravestone
mvp_tomb_enabled: yes

// Atraso antes que a tumba do MVP seja invocada.
// Padrão: 9 segundos
mvp_tomb_delay: 9000

// Se o tamanho de monstros especialmente invocados influencia a experiência, taxas de drop
// e status. As taxas serão dobradas para monstros grandes e reduzidas pela metade para os pequenos.
// Isso é invocado apenas sob o comando 'monster', @monsterbig e @monstersmall. (Nota 1 )
// Padrão: no
mob_size_influence: no

// Como um monstro deve ser aprisionado por uma Barreira de Gelo conjurada diretamente sobre ele?
// Em servidores oficiais, monstros só podem sair de uma Barreira de Gelo para o oeste e sul. Se o alvo deles estiver ao norte ou leste,
// eles tentarão persegui-lo continuamente, mas falharão. Isso os coloca em um loop durante o qual usarão
// habilidades ociosas e de perseguição. Monstros chefes, por outro lado, se comportarão como um monstro aprisionado, não se moverão e usarão
// habilidades ociosas e de "ataque rude" (quando atacados).
// 0: O monstro não ficará preso na Barreira de Gelo.
// 1: O monstro se comportará como um monstro aprisionado.
// 2-255: Número de loops que um monstro passará pelo comportamento descrito acima antes de se libertar da Barreira de Gelo.
// NOTA: Em alguns servidores, monstros normais podem se libertar após 15-35 segundos, dependendo de sua velocidade. Em outros
// servidores, eles ficarão presos dentro da Barreira de Gelo até que ela expire. Além disso, muitos servidores oficiais (ex: iRO) têm a
// conjuração de Barreira de Gelo completamente bloqueada em todos os mapas que têm monstros chefes.
// Padrão (menos explorável): monstro - 75, chefe - 0
// Padrão (mais oficial): monstro - 220, chefe - 1
mob_icewall_walk_block: 75
boss_icewall_walk_block: 0

// As barras de HP devem ser mostradas para os monstros?
// Requer cliente 2012-04-04aRagexeRE ou superior.
monster_hp_bars_info: yes

// Um monstro deve renascer e um aviso ser impresso no map-server quando um monstro não conseguir se mover por muito tempo?
// Isso pode ser uma jogabilidade legítima (ex: jogadores mantendo um MVP preso em uma Barreira de Gelo), mas se você quiser prevenir
// explorações e ser notificado sobre elas, pode definir como sim.
monster_stuck_warning: no

// Taxa com que os monstros usam suas habilidades ociosas quando não há jogadores por perto (Nota 2)
// Em servidores oficiais, os monstros usam suas habilidades ociosas se tiverem sido vistos uma vez, mesmo que não haja mais jogadores por perto.
// Em servidores de pequeno a médio porte, isso pode fazer com que todos os monstros como ovos e Fabre/Pupa se metamorfoseiem.
// Para desligar, defina como 0.
mob_nopc_idleskill_rate: 100
boss_nopc_idleskill_rate: 100

// Taxa com que os monstros se movem quando não há jogadores por perto (Nota 2)
// Em servidores oficiais, os monstros sempre se movem se tiverem sido vistos uma vez, mesmo que não haja mais jogadores por perto.
// Para desligar, defina como 0.
mob_nopc_move_rate: 100
boss_nopc_move_rate: 100

// Ao matar um monstro, as conquistas do tipo AG_BATTLE são ativadas para todos no mesmo grupo dentro da área?
// A área é limitada pela configuração de batalha area_size.
achievement_mob_share: no

// Tempo mínimo absoluto de respawn em milissegundos de um monstro.
// Também usado para atrasar o surgimento de guardiões quando um clã não está carregado.
// Padrão (Oficial): 1000
mob_respawn_time: 1000

// Define o tempo (em ms) após o qual um monstro destrava seu alvo quando aprisionado.
// Durante este tempo, os monstros ainda estarão em modo ocioso e usarão habilidades ociosas em alvos
// aleatórios, mas continuarão a perseguir seu alvo original quando não estiverem mais aprisionados.
mob_unlock_time: 2000
