// Traduzido e revisado por Vrods e Manus.
//--------------------------------------------------------------
// Arquivo de Configuração de Batalha do rAthena
// Originalmente traduzido por Peter Kieser <pfak@telus.net>
// Tornado para um inglês mais simples por Ancyker
//--------------------------------------------------------------
// Nota 1: O valor é um interruptor de configuração (on/off, yes/no ou 1/0)
// Nota 2: O valor está em porcentagem (100 significa 100%)
// Nota 3: O valor é um campo de bits (bit field). Se nenhuma descrição for fornecida,
//         assuma os tipos de unidade (1: Jogador, 2: Monstro, 4: Pet, 8: Homunculo, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// Quem deve ter um valor de ataque base (faz com que a FOR afete o dano)? (Nota 3)
enable_baseatk: 0x9
enable_baseatk_renewal: 0x29F

// Quem pode ter esquiva perfeita (perfect flee)? (Nota 3)
enable_perfect_flee: 1

// Quem pode ter ataques críticos? (Nota 3)
// (Note que existem algumas habilidades que sempre causam acerto crítico, independentemente desta configuração)
enable_critical: 17

// Taxa de ajuste de crítico para não-jogadores (Nota 2)
mob_critical_rate: 100
critical_rate: 100

// Quais tipos de unidade devem receber um atraso de caminhada (walk delay) de ataques normais? (Nota 3)
// O atraso é igual à 'animação de ataque' (amotion). O cliente já bloqueia
// o envio de solicitações de movimento durante esse tempo, então para personagens controlados pelo cliente
// esta configuração é principalmente um mecanismo de segurança contra edições no cliente.
// Monstros geralmente não são afetados por isso, pois sua IA fica inativa durante a animação de ataque,
// a menos que você personalize a IA deles (veja monster_ai 0x2000 em monster.conf)
attack_walk_delay: 0

// Usar o sistema legado de atraso de caminhada ao receber dano? (Nota 3)
// Oficialmente, ao ser atingido, você apenas para no centro da célula mais próxima.
// O atraso de caminhada afeta apenas o tempo que um monstro reage ao dano neste caso.
// O sistema legado impede completamente os comandos de movimento pela duração do atraso, mas
// só se aplica se o alvo foi capaz de se mover anteriormente por pelo menos a duração do atraso.
damage_walk_delay: 0

// Ajuste do atraso de movimento após ser atingido. (Nota 2)
// O atraso 'não pode andar' após ser atingido é calculado como uma porcentagem da duração da animação de dano.
// Para monstros, este atraso também determina quanto tempo leva até que eles reajam a um atacante.
pc_damage_walk_delay_rate: 20
damage_walk_delay_rate: 100

// Ajuste do atraso de movimento para ataques de múltiplos acertos.
// Ao ser atingido por uma habilidade de múltiplos acertos como Trovão de Júpiter ou Ira de Thor, os personagens
// ficarão impossibilitados de se mover por um adicional de "(número de acertos - 1) * multihit_delay" milissegundos.
// Por favor, note que habilidades que causam mais de 10 acertos são consideradas apenas como habilidades de 2 acertos.
// Este atraso também é adicionado ao tempo que um monstro espera até reagir a um atacante.
// Oficial: 200
// Athena Legado: 80
multihit_delay: 200

// Taxa de atraso de dano para jogadores (Nota 2)
// Isso afeta o atraso de dano que é enviado ao cliente e é o valor base para o atraso de caminhada.
player_damage_delay_rate: 100

// Sempre ter a habilidade Vigor (Endure)? (Nota 3)
// Os tipos de unidade definidos aqui não podem ser parados por dano.
// Por favor, note que críticos não podem ser exibidos em alvos com Vigor devido a uma limitação do cliente.
// Isso significa que esta configuração torna impossível exibir acertos críticos nesses tipos de unidade.
infinite_endure: 0

// Raça ou elemento deve ser usado para considerar alguém como morto-vivo?
// 0 = elemento morto-vivo
// 1 = raça morto-vivo
// 2 = ambos (qualquer um dos dois funciona)
undead_detect_type: 0

// O HP é recuperado se atingido por um atributo que é o mesmo que o seu? (Nota 1)
attribute_recover: no

// Qual é a taxa de acerto mínima e máxima de ataques normais?
min_hitrate: 5
max_hitrate: 100

// Tipo de penalidade aplicada à ESQUIVA (FLEE) quando mais de 'agi_penalty_count' monstros estão mirando no jogador.
// 0 = nenhuma penalidade é aplicada
// 1 = 'agi_penalty_num' é reduzido da ESQUIVA como uma %
// 2 = 'agi_penalty_num' é reduzido da ESQUIVA como um valor exato
agi_penalty_type: 1

// Quando a penalidade de agi está ativada, a quem ela deve se aplicar? (Nota 3)
// Por padrão, apenas jogadores recebem a penalidade.
agi_penalty_target: 1

// Quantidade de inimigos necessária mirando no jogador antes que a ESQUIVA comece a ser penalizada.
agi_penalty_count: 3

// Quantidade de ESQUIVA penalizada para cada monstro atacante além de 'agi_penalty_count'.
agi_penalty_num: 10

// Tipo de penalidade aplicada tanto à DEF de equipamento quanto à de VIT quando mais de 'vit_penalty_count' monstros estão mirando no jogador.
// 0 = nenhuma penalidade é aplicada
// 1 = 'vit_penalty_num' é reduzido da DEF como uma %
// 2 = 'vit_penalty_num' é reduzido da DEF como um valor exato
vit_penalty_type: 1

// Quando a penalidade de vit está ativada, a quem ela deve se aplicar? (Nota 3)
// Por padrão, apenas jogadores recebem a penalidade.
vit_penalty_target: 1

// Quantidade de inimigos necessária mirando no jogador antes que a defesa comece a ser penalizada.
vit_penalty_count: 3

// Quantidade de defesa de VIT penalizada para cada monstro atacante além de 'vit_penalty_count'.
vit_penalty_num: 5

// Usar método alternativo de cálculo de DEF para ataques físicos.
// Com 0, desativado (usa redução normal de def% com redução adicional de def2)
// Com 1 ou mais, a defesa é a subtração de (DEF * valor).
// ex: 10 + 50 de def se torna 0 + (10*tipo + 50)
weapon_defense_type: 0

// DEFM, o mesmo que acima. (DEFM * valor)
magic_defense_type: 0

// Mudar a direção do atacante para encarar o oponente a cada ataque? (Nota 3)
// NOTA: Em servidores oficiais, o empurrão (knockback) de algumas habilidades como Barreira de Fogo é sempre
// baseado na última direção andada. Mesmo atacando em uma direção completamente diferente, a
// direção do empurrão não mudará. Ex: se você andar para o norte e depois atacar um inimigo
// ao sul, você ainda será empurrado para o sul pela Barreira de Fogo. Monstros imóveis
// sempre serão empurrados para o sul, pois sua direção padrão é o norte.
attack_direction_change: 0

// Para aqueles que estiverem definidos, seu elemento de ataque inato é "não elemental"
// (100% contra todos os elementos de defesa) (Nota 3)
// NOTA: Esta é a configuração que faz com que não-jogadores possam causar dano total
// contra alvos do tipo Fantasma com ataques normais (ex: vs. Ghostring).
attack_attr_none: 14

// Taxa na qual equipamentos podem quebrar (taxa base antes de ser modificada por qualquer habilidade)
// 1 = 0.01% de chance. Padrão para servidores oficiais: 0
equip_natural_break_rate: 0

// Taxa geral na qual seu próprio equipamento pode quebrar. (Nota 2)
// Esta taxa afeta a taxa de quebra por penalidade de habilidades como Potencializar e sua taxa de quebra natural
// (de equip_natural_break_rate). Se a habilidade de Encantar Arma de um Sábio falhar e isto for maior que 0,
// a arma do personagem selecionado será quebrada.
equip_self_break_rate: 100

// Taxa geral na qual você pode quebrar o equipamento do alvo. (Nota 2)
// Isso afeta o comportamento de habilidades como Terror Ácido e Colapso.
equip_skill_break_rate: 100

// O dano deve ter um atraso antes de ser aplicado? (Nota 1)
// Algumas habilidades podem não ter um atraso por padrão, independentemente desta configuração.
// A configuração oficial é sim, mesmo que degrade um pouco o desempenho.
delay_battle_damage: yes

// O tempo do dano deve ser sincronizado entre o cliente e o servidor? (Nota 1)
// Este não é o comportamento oficial, mas deve remover o lag de posição após ser atingido por um monstro.
// Esta configuração afeta apenas ataques normais de monstros e tem prioridade sobre "delay_battle_damage".
// Muitas habilidades mostram seu dano imediatamente, então definir "delay_battle_damage" como "no" ao
// mesmo tempo pode melhorar ainda mais a experiência, mas não funcionará para todas as habilidades.
// Cansado de Ilusão das Trevas te atingir 5 segundos atrasado? Então ative isso.
synchronize_damage: no

// Flechas/munição são consumidas quando usadas em um arco/arma?
// 0 = Não
// 1 = Sim
// 2 = Sim, mesmo para habilidades que não especificam o consumo de flechas quando
//     a dita habilidade é baseada em arma e usada com armas de longo alcance (adivinha
//     automaticamente quais habilidades devem consumir munição quando adquiridas via carta ou plágio)
arrow_decrement: 1

// A munição deve ser desequipada ao desequipar uma arma?
// O comportamento oficial é "sim".
ammo_unequip: yes

// Uma arma adequada deve ser equipada ao equipar munição?
// O comportamento oficial é "sim".
ammo_check_weapon: yes

// O bônus de script de item 'Autocast' (Magia Automática) deve verificar o alcance/obstáculos antes de conjurar?
// O comportamento oficial é "não", definir isso como "sim" fará com que as habilidades usem seu
// alcance definido. Por exemplo, Lâminas Destruidoras requer uma distância de 2 células antes que o autocast seja permitido.
// Esta configuração também afeta o autocast ao ser atingido (autospellwhenhit).
autospell_check_range: no

// Se tanto o atacante quanto o alvo estiverem na mesma célula, o alvo deve ser empurrado para a esquerda?
// O comportamento oficial é "sim", definir isso como "não" empurrará o alvo para trás do atacante.
knockback_left: yes

// Os jogadores podem usar Falcões e Wargs ao mesmo tempo? (Nota 1)
// Isso não é permitido em servidores oficiais.
warg_can_falcon: no

// O alvo deve ser capaz de se esquivar do dano "saltando" para a borda da tela?
// O comportamento oficial é "não".
snap_dodge: no

// Conceder a habilidades/itens de jogadores a capacidade de "quebrar" equipamentos de não-jogadores. (Nota 1)
// Isso aplicará efetivamente o efeito de remoção de equipamento ao alvo não-jogador.
// NOTA: A habilidade Colapso (WS_MELTDOWN) está isenta desta verificação quando desativada.
// Oficial: não
break_mob_equip: no
